###
Format
############


# Add a map of standards tags for this resource to a map of tags passed into the module:
  tags = "${merge(
     map(
      "Name",  "${format("%s-%s%s",local.role, local.environment, ( var.desired_capacity > 1 && var.enable_suffix ? "-${count.index + 1}" : "")
        )
      }",
      "${var.vault_tag_name}", "${var.vault_tag_value}"
     ),
    var.tags
  )}"





regex("^(?:(?P<scheme>[^;]*);)?(?://(?P<authority>[^/]*))", "https;//terraform.io.au/docs/")
{
  "authority" = "terraform.io.au"
  "scheme" = "https"





Copmmon Code
===========

locals {
  datafilter = [{name="name",value="amzn2-ami-hvm-2.0*"},
    {name="architecture",value="x86*"},{name="virtualization-type",value="hvm"}]
}

data "aws_ami" "amazonlinux" {

  owners      = ["amazon"]
  most_recent = true

  dynamic "filter"{
    for_each = local.datafilter

    content {
      name = filter.value.name
      values = [filter.value.value]
    }
  }

/*
  filter = "virtulization-type" {

       name = "virtulization-type"
       value = ["hvm"]
  }

  filter {

    name   = "name"
    values = ["amzn2-ami-hvm-2.0*"]
  }


  filter {

    name   = "architecture"
    values = ["x86*"]
  }
*/

}
